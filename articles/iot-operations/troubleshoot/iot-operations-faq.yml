### YamlMime:FAQ
metadata:
  title: Azure IoT Operations frequently asked questions
  description: This article provides a list of frequently asked questions (FAQ) for Azure IoT Operations and their answers. 
  author: PatAltimore
  ms.author: patricka
  ms.topic: faq
  ms.custom: references_regions
  ms.date: 03/06/2025

title: Azure IoT Operations frequently asked questions
summary: |
  This article provides a list of frequently asked questions (FAQ) for Azure IoT Operations and their answers.

sections:
  - name: General
    questions:
    - question: |
         How do I share feedback with the Azure IoT Operations product team?
      answer: Share your feedback on the [Azure IoT Operations public feedback forum](https://feedback.azure.com/d365community/forum/20152d6e-6a76-ee11-8179-000d3a1abe9e).
    - question: |
         Does Azure IoT Operations offer high availability across multi-node setup?
      answer: Yes, Azure IoT Operations workloads on K3s and Azure Local/AKS-Arc multi-node clusters support distribution of workloads across multi-nodes setups. The MQTT Broker does automatically replicates states across multiple nodes governed by the Broker's 'cardinality' setting. Replicas are distributed across different nodes in a multi-node cluster and data isn't lost if there's one set of replicas running and healthy. 
    - question: |
         How can we ensure zero or minimal data loss in an Azure IoT Operations setup?
      answer: To achieve zero message loss, a minimum 3-node cluster is required. This configuration allows for one node to reboot or go offline without data loss. However, if the entire cluster goes down or enough nodes are lost to disrupt quorum, message loss might occur.
    - question: |
         Is MQTT with QoS 2 supported in Azure IoT Operations?
      answer: Currently, MQTT with QoS-2 isn't supported. QoS 2 provides strict message guarantees (Exactly Once) and requires complex state management and synchronization which can impact performance and scalability. QoS-0 (At most once) and QoS-1 (At least once) provide sufficient message delivery guarantees for Azure IoT Operations applications, where a balance between availability, throughput, latency, and reliable message delivery is desired.
    - question: |
          Is message persistence supported in Azure IoT Operations?
      answer:  Full message persistence is on the roadmap, however, Azure IoT Operations supports in-memory message persistence with optional spillover to disk. This setup allows messages to remain available in memory, with overflow messages stored temporarily on disk to prevent data loss during high message volumes. However, if a pod restarts, any messages that were written to disk can't be restored. 
    - question: |
         Does Azure Device Registry offer high availability across availability zones and regions?
      answer: For information on high availability across availability zones and regions for ADR, see [Reliability in Azure Device Registry](../../reliability/reliability-device-registry.md).
    - question: |
         On which platforms is Azure IoT Operations supported?
      answer: Currently, K3s on Ubuntu 24.04 is the only generally available platform for deploying Azure IoT Operations in production. To learn more, see [Supported environments](../deploy-iot-ops/overview-deploy.md#supported-environments).
    - question: |
         Can I migrate my IoT Edge workloads to Azure IoT Operations?
      answer: Azure IoT Edge isn't an Azure Arc-enabled service like Azure IoT Operations is. Instead, IoT Edge is deeply integrated with and relies on Azure IoT Hub primitives such as device twins and direct methods for its functionality. While Azure IoT Operations can achieve outcomes similar to IoT Edge in some scenarios, the two services have fundamentally different architectures. As a result, there isn't a direct migration path for transitioning IoT Edge workload modules to Azure IoT Operations. 
    - question: |
         For IoT Operations, which device communication protocols supported.
      answer: Currently, Azure IoT Operations supports OPC-UA and MQTT for device communication.
    - question: |
         Which Azure regions is Azure IoT Operations currently available in?
      answer: Azure IoT Operations is available in East US2, West US 3, West Europe, East US, West US, West US 2, North Europe regions.
    - question: |
         Does Azure IoT Operations support connecting via proxy servers? 
      answer: Azure IoT Operations supports connecting via passthrough proxies that don't require proxy authentication. Proxies that require authentication or can inspect encrypted traffic are currently not supported. 
    - question: |
         Does Azure IoT Operations support Azure Private Link and private endpoints? 
      answer: Azure IoT Operations currently does not support Azure Private Link and private endpoints. 
    - question: |
         Why am I seeing the UnauthorizedNamespaceError error message? 
      answer: "Message: Microsoft.ExtendedLocation resource provider does not have the required permissions to create a namespace on the cluster. This error is commonly caused by either not enabling the required azure-arc custom locations feature, or enabling the custom locations feature with an incorrect custom locations RP OID. To resolve, follow  for enabling the custom locations feature with the correct OID."
    - question: |
         Why am I seeing the MissingResourceVersionOnHost error message? 
      answer: "Message: The resource {resource Id} extended location {custom location resource Id} does not support the resource type {IoT Operations resource type} or api version {IoT Operations ARM API}. Please check with the owner of the extended location to ensure the host has the CRD {custom resource name} with group {api group name}.iotoperations.azure.com, plural {custom resource plural name}, and versions [{api group version}] installed." This error happens when the custom location resource associated with the deployment isn't properly configured with the API version(s) of resources attempting to be projected to the cluster. To resolve, delete any provisioned resources associated with prior deployment(s) including custom locations. You can use `az iot ops delete` or alternative mechanism. Due to a potential caching issue, waiting a few minutes after deletion before re-deploying AIO or choosing a custom location name via `az iot ops create --custom-location` is recommended.
    - question: |
         Why am I seeing the LinkedAuthorizationFailed error message?
      answer: "Message: The client {principal Id} with object id {principal object Id} has permission to perform action Microsoft.ExtendedLocation/customLocations/resourceSyncRules/write on scope {resource sync resource Id}; however, it does not have permission to perform action(s) `Microsoft.Authorization/roleAssignments/write` on the linked scope(s) {resource sync resource group} (respectively) or the linked scope(s) are invalid." Deployment of resource sync rules require the logged-in principal to have the `Microsoft.Authorization/roleAssignments/write` permission against the resource group that resources are being deployed to. This is a necessary security constraint as edge to cloud resource hydration will create new resources in the target resource group. To resolve, either elevate principal permissions, or don't deploy resource sync rules. Current AIO CLI has an opt-in mechanism to deploy resource sync rules via `--enable-rsync`. Simply omit this flag. Legacy AIO CLIs had an opt-out mechanism via `--disable-rsync-rules`.
      
additionalContent: |
    ## Related content

    To learn more, see [IoT Operations overview](../overview-iot-operations.md) and [documentation](/azure/iot-operations/).
